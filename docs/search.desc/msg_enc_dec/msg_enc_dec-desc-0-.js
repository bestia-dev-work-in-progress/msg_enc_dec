searchState.loadedDescShard("msg_enc_dec", 0, "src/bin/msg_enc_dec/main.rs\nANSI color\nStruct that represents the json data saved in the ‘*.enc…\nANSI color\nApplication state (static) is initialized only once in the …\nANSI color\nANSI color\nANSI color\nActivate completion with the bash command complete.\nPrint one or more sub_commands.\nCreate ssh key and config json.\nSave the secret bytes symmetrically encrypted into a file.\nDecrypt file.\nEncrypt file.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet private key file name from global variable.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFunction main() returns ExitCode.\nFunction main() returns anyhow::Result.\nDecrypt message from terminal.\nEncrypt message from terminal.\nSub-command for bash auto-completion of <code>msg_enc_dec</code>.\nApplication state (static) is initialized only once in the …\nPrint help to the terminal.\nReceive public key, calculate shared secret, encrypt and …\nPrint the static public key to be sent.\nInitialize tracing to file logs/automation_tasks_rs.log\nGeneric functions to encrypt and decrypt secrets using the …\nDecode Base64UrlUnpadded from string to 32bytes.\nDecode Base64UrlUnpadded from string to string.\nDecrypts plain_encrypted_string with …\nDecrypts plain_encrypted_string with …\nDecode Base64UrlUnpadded from string to 32bytes.\nEncode Base64UrlUnpadded from bytes to string.\nEncode Base64UrlUnpadded from string to string.\nEncrypts symmetrically secret_string_to_encrypt with …\nEncrypts symmetrically secret_bytes_to_encrypt with …\nGet the string from the file that is Base64UrlUnpadded …\nGenerate a random seed.\nShorten the <code>Vec&lt;u8&gt; to [u8;32]</code>.\nSign the seed with the private key into 32 bytes secret.\nSign seed with ssh-agent into 32 bytes secret.\nReturns the secret signed seed.")